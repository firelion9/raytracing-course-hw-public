// This source file has been generated by generate.py->vectors.py

struct vec2 {
    std::array<float, 2> val;

    [[nodiscard]] constexpr inline vec2(float x = 0) : val({x, x}) {}
    [[nodiscard]] constexpr inline vec2(float x, float y) : val({x, y}) {}
    [[nodiscard]] constexpr inline vec2(const vec2&) = default;
    inline vec2& operator=(const vec2&) = default;

    [[nodiscard]] constexpr inline float& x() {
        return this->val[0];
    }

    [[nodiscard]] constexpr inline const float& x() const{
        return this->val[0];
    }

    [[nodiscard]] constexpr inline float& y() {
        return this->val[1];
    }

    [[nodiscard]] constexpr inline const float& y() const{
        return this->val[1];
    }

    [[nodiscard]] constexpr inline vec2 xx() const {
        return {this->x(), this->x()};
    }

    [[nodiscard]] constexpr inline vec2 xy() const {
        return {this->x(), this->y()};
    }

    [[nodiscard]] constexpr inline vec2 yx() const {
        return {this->y(), this->x()};
    }

    [[nodiscard]] constexpr inline vec2 yy() const {
        return {this->y(), this->y()};
    }

    [[nodiscard]] constexpr inline float len_l1() const {
        return std::abs(this->x())+std::abs(this->y());
    }

    [[nodiscard]] constexpr inline float len2() const {
        return this->x() * this->x()+this->y() * this->y();
    }

    [[nodiscard]] constexpr inline float len() const {
        return std::sqrt(this->len2());
    }

    [[nodiscard]] constexpr inline vec2 abs() const {
        return {std::abs(this->x()), std::abs(this->y())};
    }

};

[[nodiscard]] constexpr inline bool operator==(const vec2& a, const vec2& b) {
    return (a.x()==b.x()) & (a.y()==b.y());
}

[[nodiscard]] constexpr inline vec2 operator+(const vec2& a, const vec2& b) {
    return {a.x() + b.x(), a.y() + b.y()};
}

[[nodiscard]] constexpr inline vec2 operator-(const vec2& a, const vec2& b) {
    return {a.x() - b.x(), a.y() - b.y()};
}

[[nodiscard]] constexpr inline vec2 operator*(const vec2& a, const vec2& b) {
    return {a.x() * b.x(), a.y() * b.y()};
}

[[nodiscard]] constexpr inline vec2 operator/(const vec2& a, const vec2& b) {
    return {a.x() / b.x(), a.y() / b.y()};
}

constexpr inline vec2& operator+=(vec2& a, const vec2& b) {
    a.x() += b.x();
    a.y() += b.y();
    return a;
}

constexpr inline vec2& operator-=(vec2& a, const vec2& b) {
    a.x() -= b.x();
    a.y() -= b.y();
    return a;
}

constexpr inline vec2& operator*=(vec2& a, const vec2& b) {
    a.x() *= b.x();
    a.y() *= b.y();
    return a;
}

constexpr inline vec2& operator/=(vec2& a, const vec2& b) {
    a.x() /= b.x();
    a.y() /= b.y();
    return a;
}

[[nodiscard]] constexpr inline vec2 operator-(const vec2& vec) {
    return {-vec.x(), -vec.y()};
}

[[nodiscard]] constexpr inline vec2 operator+(const vec2& vec, float scl) {
    return {vec.x() + scl, vec.y() + scl};
}

[[nodiscard]] constexpr inline vec2 operator+(float scl, const vec2& vec) {
    return {scl + vec.x() , scl + vec.y() };
}

[[nodiscard]] constexpr inline vec2 operator-(const vec2& vec, float scl) {
    return {vec.x() - scl, vec.y() - scl};
}

[[nodiscard]] constexpr inline vec2 operator-(float scl, const vec2& vec) {
    return {scl - vec.x() , scl - vec.y() };
}

[[nodiscard]] constexpr inline vec2 operator*(const vec2& vec, float scl) {
    return {vec.x() * scl, vec.y() * scl};
}

[[nodiscard]] constexpr inline vec2 operator*(float scl, const vec2& vec) {
    return {scl * vec.x() , scl * vec.y() };
}

[[nodiscard]] constexpr inline vec2 operator/(const vec2& vec, float scl) {
    return {vec.x() / scl, vec.y() / scl};
}

[[nodiscard]] constexpr inline vec2 operator/(float scl, const vec2& vec) {
    return {scl / vec.x() , scl / vec.y() };
}

constexpr inline vec2& operator+=(vec2& vec, float scl) {
    vec.x() += scl;
    vec.y() += scl;
return vec;
}

constexpr inline vec2& operator-=(vec2& vec, float scl) {
    vec.x() -= scl;
    vec.y() -= scl;
return vec;
}

constexpr inline vec2& operator*=(vec2& vec, float scl) {
    vec.x() *= scl;
    vec.y() *= scl;
return vec;
}

constexpr inline vec2& operator/=(vec2& vec, float scl) {
    vec.x() /= scl;
    vec.y() /= scl;
return vec;
}

inline std::istream& operator>>(std::istream& stream, vec2& vec) {
    return stream >> vec.x() >> vec.y();
}

[[nodiscard]] constexpr inline float dot(const vec2 &a, const vec2 &b) {
    return a.x() * b.x() + a.y() * b.y();
}
[[nodiscard]] constexpr inline vec2 min(const vec2& a, const vec2& b) {
    return {std::min(a.x(), b.x()), std::min(a.y(), b.y())};
}

[[nodiscard]] constexpr inline vec2 max(const vec2& a, const vec2& b) {
    return {std::max(a.x(), b.x()), std::max(a.y(), b.y())};
}

[[nodiscard]] constexpr inline vec2 pow(const vec2& a, const vec2& b) {
    return {std::pow(a.x(), b.x()), std::pow(a.y(), b.y())};
}

[[nodiscard]] constexpr inline vec2 pow(const vec2& a, float scl) {
    return {std::pow(a.x(), scl), std::pow(a.y(), scl)};
}


struct vec3 {
    std::array<float, 3> val;

    [[nodiscard]] constexpr inline vec3(float x = 0) : val({x, x, x}) {}
    [[nodiscard]] constexpr inline vec3(float x, float y, float z) : val({x, y, z}) {}
    [[nodiscard]] constexpr inline vec3(const vec3&) = default;
    inline vec3& operator=(const vec3&) = default;
    [[nodiscard]] constexpr inline vec3(vec2 p0, float p1) : vec3{p0.val[0], p0.val[1], p1} {}

    [[nodiscard]] constexpr inline vec3(float p0, vec2 p1) : vec3{p0, p1.val[0], p1.val[1]} {}


    [[nodiscard]] constexpr inline float& x() {
        return this->val[0];
    }

    [[nodiscard]] constexpr inline const float& x() const{
        return this->val[0];
    }

    [[nodiscard]] constexpr inline float& y() {
        return this->val[1];
    }

    [[nodiscard]] constexpr inline const float& y() const{
        return this->val[1];
    }

    [[nodiscard]] constexpr inline float& z() {
        return this->val[2];
    }

    [[nodiscard]] constexpr inline const float& z() const{
        return this->val[2];
    }

    [[nodiscard]] constexpr inline vec2 xx() const {
        return {this->x(), this->x()};
    }

    [[nodiscard]] constexpr inline vec2 xy() const {
        return {this->x(), this->y()};
    }

    [[nodiscard]] constexpr inline vec2 xz() const {
        return {this->x(), this->z()};
    }

    [[nodiscard]] constexpr inline vec2 yx() const {
        return {this->y(), this->x()};
    }

    [[nodiscard]] constexpr inline vec2 yy() const {
        return {this->y(), this->y()};
    }

    [[nodiscard]] constexpr inline vec2 yz() const {
        return {this->y(), this->z()};
    }

    [[nodiscard]] constexpr inline vec2 zx() const {
        return {this->z(), this->x()};
    }

    [[nodiscard]] constexpr inline vec2 zy() const {
        return {this->z(), this->y()};
    }

    [[nodiscard]] constexpr inline vec2 zz() const {
        return {this->z(), this->z()};
    }

    [[nodiscard]] constexpr inline vec3 xxx() const {
        return {this->x(), this->x(), this->x()};
    }

    [[nodiscard]] constexpr inline vec3 xxy() const {
        return {this->x(), this->x(), this->y()};
    }

    [[nodiscard]] constexpr inline vec3 xxz() const {
        return {this->x(), this->x(), this->z()};
    }

    [[nodiscard]] constexpr inline vec3 xyx() const {
        return {this->x(), this->y(), this->x()};
    }

    [[nodiscard]] constexpr inline vec3 xyy() const {
        return {this->x(), this->y(), this->y()};
    }

    [[nodiscard]] constexpr inline vec3 xyz() const {
        return {this->x(), this->y(), this->z()};
    }

    [[nodiscard]] constexpr inline vec3 xzx() const {
        return {this->x(), this->z(), this->x()};
    }

    [[nodiscard]] constexpr inline vec3 xzy() const {
        return {this->x(), this->z(), this->y()};
    }

    [[nodiscard]] constexpr inline vec3 xzz() const {
        return {this->x(), this->z(), this->z()};
    }

    [[nodiscard]] constexpr inline vec3 yxx() const {
        return {this->y(), this->x(), this->x()};
    }

    [[nodiscard]] constexpr inline vec3 yxy() const {
        return {this->y(), this->x(), this->y()};
    }

    [[nodiscard]] constexpr inline vec3 yxz() const {
        return {this->y(), this->x(), this->z()};
    }

    [[nodiscard]] constexpr inline vec3 yyx() const {
        return {this->y(), this->y(), this->x()};
    }

    [[nodiscard]] constexpr inline vec3 yyy() const {
        return {this->y(), this->y(), this->y()};
    }

    [[nodiscard]] constexpr inline vec3 yyz() const {
        return {this->y(), this->y(), this->z()};
    }

    [[nodiscard]] constexpr inline vec3 yzx() const {
        return {this->y(), this->z(), this->x()};
    }

    [[nodiscard]] constexpr inline vec3 yzy() const {
        return {this->y(), this->z(), this->y()};
    }

    [[nodiscard]] constexpr inline vec3 yzz() const {
        return {this->y(), this->z(), this->z()};
    }

    [[nodiscard]] constexpr inline vec3 zxx() const {
        return {this->z(), this->x(), this->x()};
    }

    [[nodiscard]] constexpr inline vec3 zxy() const {
        return {this->z(), this->x(), this->y()};
    }

    [[nodiscard]] constexpr inline vec3 zxz() const {
        return {this->z(), this->x(), this->z()};
    }

    [[nodiscard]] constexpr inline vec3 zyx() const {
        return {this->z(), this->y(), this->x()};
    }

    [[nodiscard]] constexpr inline vec3 zyy() const {
        return {this->z(), this->y(), this->y()};
    }

    [[nodiscard]] constexpr inline vec3 zyz() const {
        return {this->z(), this->y(), this->z()};
    }

    [[nodiscard]] constexpr inline vec3 zzx() const {
        return {this->z(), this->z(), this->x()};
    }

    [[nodiscard]] constexpr inline vec3 zzy() const {
        return {this->z(), this->z(), this->y()};
    }

    [[nodiscard]] constexpr inline vec3 zzz() const {
        return {this->z(), this->z(), this->z()};
    }

    [[nodiscard]] constexpr inline float len_l1() const {
        return std::abs(this->x())+std::abs(this->y())+std::abs(this->z());
    }

    [[nodiscard]] constexpr inline float len2() const {
        return this->x() * this->x()+this->y() * this->y()+this->z() * this->z();
    }

    [[nodiscard]] constexpr inline float len() const {
        return std::sqrt(this->len2());
    }

    [[nodiscard]] constexpr inline vec3 abs() const {
        return {std::abs(this->x()), std::abs(this->y()), std::abs(this->z())};
    }

};

[[nodiscard]] constexpr inline bool operator==(const vec3& a, const vec3& b) {
    return (a.x()==b.x()) & (a.y()==b.y()) & (a.z()==b.z());
}

[[nodiscard]] constexpr inline vec3 operator+(const vec3& a, const vec3& b) {
    return {a.x() + b.x(), a.y() + b.y(), a.z() + b.z()};
}

[[nodiscard]] constexpr inline vec3 operator-(const vec3& a, const vec3& b) {
    return {a.x() - b.x(), a.y() - b.y(), a.z() - b.z()};
}

[[nodiscard]] constexpr inline vec3 operator*(const vec3& a, const vec3& b) {
    return {a.x() * b.x(), a.y() * b.y(), a.z() * b.z()};
}

[[nodiscard]] constexpr inline vec3 operator/(const vec3& a, const vec3& b) {
    return {a.x() / b.x(), a.y() / b.y(), a.z() / b.z()};
}

constexpr inline vec3& operator+=(vec3& a, const vec3& b) {
    a.x() += b.x();
    a.y() += b.y();
    a.z() += b.z();
    return a;
}

constexpr inline vec3& operator-=(vec3& a, const vec3& b) {
    a.x() -= b.x();
    a.y() -= b.y();
    a.z() -= b.z();
    return a;
}

constexpr inline vec3& operator*=(vec3& a, const vec3& b) {
    a.x() *= b.x();
    a.y() *= b.y();
    a.z() *= b.z();
    return a;
}

constexpr inline vec3& operator/=(vec3& a, const vec3& b) {
    a.x() /= b.x();
    a.y() /= b.y();
    a.z() /= b.z();
    return a;
}

[[nodiscard]] constexpr inline vec3 operator-(const vec3& vec) {
    return {-vec.x(), -vec.y(), -vec.z()};
}

[[nodiscard]] constexpr inline vec3 operator+(const vec3& vec, float scl) {
    return {vec.x() + scl, vec.y() + scl, vec.z() + scl};
}

[[nodiscard]] constexpr inline vec3 operator+(float scl, const vec3& vec) {
    return {scl + vec.x() , scl + vec.y() , scl + vec.z() };
}

[[nodiscard]] constexpr inline vec3 operator-(const vec3& vec, float scl) {
    return {vec.x() - scl, vec.y() - scl, vec.z() - scl};
}

[[nodiscard]] constexpr inline vec3 operator-(float scl, const vec3& vec) {
    return {scl - vec.x() , scl - vec.y() , scl - vec.z() };
}

[[nodiscard]] constexpr inline vec3 operator*(const vec3& vec, float scl) {
    return {vec.x() * scl, vec.y() * scl, vec.z() * scl};
}

[[nodiscard]] constexpr inline vec3 operator*(float scl, const vec3& vec) {
    return {scl * vec.x() , scl * vec.y() , scl * vec.z() };
}

[[nodiscard]] constexpr inline vec3 operator/(const vec3& vec, float scl) {
    return {vec.x() / scl, vec.y() / scl, vec.z() / scl};
}

[[nodiscard]] constexpr inline vec3 operator/(float scl, const vec3& vec) {
    return {scl / vec.x() , scl / vec.y() , scl / vec.z() };
}

constexpr inline vec3& operator+=(vec3& vec, float scl) {
    vec.x() += scl;
    vec.y() += scl;
    vec.z() += scl;
return vec;
}

constexpr inline vec3& operator-=(vec3& vec, float scl) {
    vec.x() -= scl;
    vec.y() -= scl;
    vec.z() -= scl;
return vec;
}

constexpr inline vec3& operator*=(vec3& vec, float scl) {
    vec.x() *= scl;
    vec.y() *= scl;
    vec.z() *= scl;
return vec;
}

constexpr inline vec3& operator/=(vec3& vec, float scl) {
    vec.x() /= scl;
    vec.y() /= scl;
    vec.z() /= scl;
return vec;
}

inline std::istream& operator>>(std::istream& stream, vec3& vec) {
    return stream >> vec.x() >> vec.y() >> vec.z();
}

[[nodiscard]] constexpr inline float dot(const vec3 &a, const vec3 &b) {
    return a.x() * b.x() + a.y() * b.y() + a.z() * b.z();
}
[[nodiscard]] constexpr inline vec3 min(const vec3& a, const vec3& b) {
    return {std::min(a.x(), b.x()), std::min(a.y(), b.y()), std::min(a.z(), b.z())};
}

[[nodiscard]] constexpr inline vec3 max(const vec3& a, const vec3& b) {
    return {std::max(a.x(), b.x()), std::max(a.y(), b.y()), std::max(a.z(), b.z())};
}

[[nodiscard]] constexpr inline vec3 pow(const vec3& a, const vec3& b) {
    return {std::pow(a.x(), b.x()), std::pow(a.y(), b.y()), std::pow(a.z(), b.z())};
}

[[nodiscard]] constexpr inline vec3 pow(const vec3& a, float scl) {
    return {std::pow(a.x(), scl), std::pow(a.y(), scl), std::pow(a.z(), scl)};
}


struct vec4 {
    std::array<float, 4> val;

    [[nodiscard]] constexpr inline vec4(float x = 0) : val({x, x, x, x}) {}
    [[nodiscard]] constexpr inline vec4(float x, float y, float z, float w) : val({x, y, z, w}) {}
    [[nodiscard]] constexpr inline vec4(const vec4&) = default;
    inline vec4& operator=(const vec4&) = default;
    [[nodiscard]] constexpr inline vec4(vec2 p0, float p1, float p2) : vec4{p0.val[0], p0.val[1], p1, p2} {}

    [[nodiscard]] constexpr inline vec4(float p0, vec2 p1, float p2) : vec4{p0, p1.val[0], p1.val[1], p2} {}

    [[nodiscard]] constexpr inline vec4(vec3 p0, float p1) : vec4{p0.val[0], p0.val[1], p0.val[2], p1} {}

    [[nodiscard]] constexpr inline vec4(float p0, float p1, vec2 p2) : vec4{p0, p1, p2.val[0], p2.val[1]} {}

    [[nodiscard]] constexpr inline vec4(vec2 p0, vec2 p1) : vec4{p0.val[0], p0.val[1], p1.val[0], p1.val[1]} {}

    [[nodiscard]] constexpr inline vec4(float p0, vec3 p1) : vec4{p0, p1.val[0], p1.val[1], p1.val[2]} {}


    [[nodiscard]] constexpr inline float& x() {
        return this->val[0];
    }

    [[nodiscard]] constexpr inline const float& x() const{
        return this->val[0];
    }

    [[nodiscard]] constexpr inline float& y() {
        return this->val[1];
    }

    [[nodiscard]] constexpr inline const float& y() const{
        return this->val[1];
    }

    [[nodiscard]] constexpr inline float& z() {
        return this->val[2];
    }

    [[nodiscard]] constexpr inline const float& z() const{
        return this->val[2];
    }

    [[nodiscard]] constexpr inline float& w() {
        return this->val[3];
    }

    [[nodiscard]] constexpr inline const float& w() const{
        return this->val[3];
    }

    [[nodiscard]] constexpr inline vec2 xx() const {
        return {this->x(), this->x()};
    }

    [[nodiscard]] constexpr inline vec2 xy() const {
        return {this->x(), this->y()};
    }

    [[nodiscard]] constexpr inline vec2 xz() const {
        return {this->x(), this->z()};
    }

    [[nodiscard]] constexpr inline vec2 xw() const {
        return {this->x(), this->w()};
    }

    [[nodiscard]] constexpr inline vec2 yx() const {
        return {this->y(), this->x()};
    }

    [[nodiscard]] constexpr inline vec2 yy() const {
        return {this->y(), this->y()};
    }

    [[nodiscard]] constexpr inline vec2 yz() const {
        return {this->y(), this->z()};
    }

    [[nodiscard]] constexpr inline vec2 yw() const {
        return {this->y(), this->w()};
    }

    [[nodiscard]] constexpr inline vec2 zx() const {
        return {this->z(), this->x()};
    }

    [[nodiscard]] constexpr inline vec2 zy() const {
        return {this->z(), this->y()};
    }

    [[nodiscard]] constexpr inline vec2 zz() const {
        return {this->z(), this->z()};
    }

    [[nodiscard]] constexpr inline vec2 zw() const {
        return {this->z(), this->w()};
    }

    [[nodiscard]] constexpr inline vec2 wx() const {
        return {this->w(), this->x()};
    }

    [[nodiscard]] constexpr inline vec2 wy() const {
        return {this->w(), this->y()};
    }

    [[nodiscard]] constexpr inline vec2 wz() const {
        return {this->w(), this->z()};
    }

    [[nodiscard]] constexpr inline vec2 ww() const {
        return {this->w(), this->w()};
    }

    [[nodiscard]] constexpr inline vec3 xxx() const {
        return {this->x(), this->x(), this->x()};
    }

    [[nodiscard]] constexpr inline vec3 xxy() const {
        return {this->x(), this->x(), this->y()};
    }

    [[nodiscard]] constexpr inline vec3 xxz() const {
        return {this->x(), this->x(), this->z()};
    }

    [[nodiscard]] constexpr inline vec3 xxw() const {
        return {this->x(), this->x(), this->w()};
    }

    [[nodiscard]] constexpr inline vec3 xyx() const {
        return {this->x(), this->y(), this->x()};
    }

    [[nodiscard]] constexpr inline vec3 xyy() const {
        return {this->x(), this->y(), this->y()};
    }

    [[nodiscard]] constexpr inline vec3 xyz() const {
        return {this->x(), this->y(), this->z()};
    }

    [[nodiscard]] constexpr inline vec3 xyw() const {
        return {this->x(), this->y(), this->w()};
    }

    [[nodiscard]] constexpr inline vec3 xzx() const {
        return {this->x(), this->z(), this->x()};
    }

    [[nodiscard]] constexpr inline vec3 xzy() const {
        return {this->x(), this->z(), this->y()};
    }

    [[nodiscard]] constexpr inline vec3 xzz() const {
        return {this->x(), this->z(), this->z()};
    }

    [[nodiscard]] constexpr inline vec3 xzw() const {
        return {this->x(), this->z(), this->w()};
    }

    [[nodiscard]] constexpr inline vec3 xwx() const {
        return {this->x(), this->w(), this->x()};
    }

    [[nodiscard]] constexpr inline vec3 xwy() const {
        return {this->x(), this->w(), this->y()};
    }

    [[nodiscard]] constexpr inline vec3 xwz() const {
        return {this->x(), this->w(), this->z()};
    }

    [[nodiscard]] constexpr inline vec3 xww() const {
        return {this->x(), this->w(), this->w()};
    }

    [[nodiscard]] constexpr inline vec3 yxx() const {
        return {this->y(), this->x(), this->x()};
    }

    [[nodiscard]] constexpr inline vec3 yxy() const {
        return {this->y(), this->x(), this->y()};
    }

    [[nodiscard]] constexpr inline vec3 yxz() const {
        return {this->y(), this->x(), this->z()};
    }

    [[nodiscard]] constexpr inline vec3 yxw() const {
        return {this->y(), this->x(), this->w()};
    }

    [[nodiscard]] constexpr inline vec3 yyx() const {
        return {this->y(), this->y(), this->x()};
    }

    [[nodiscard]] constexpr inline vec3 yyy() const {
        return {this->y(), this->y(), this->y()};
    }

    [[nodiscard]] constexpr inline vec3 yyz() const {
        return {this->y(), this->y(), this->z()};
    }

    [[nodiscard]] constexpr inline vec3 yyw() const {
        return {this->y(), this->y(), this->w()};
    }

    [[nodiscard]] constexpr inline vec3 yzx() const {
        return {this->y(), this->z(), this->x()};
    }

    [[nodiscard]] constexpr inline vec3 yzy() const {
        return {this->y(), this->z(), this->y()};
    }

    [[nodiscard]] constexpr inline vec3 yzz() const {
        return {this->y(), this->z(), this->z()};
    }

    [[nodiscard]] constexpr inline vec3 yzw() const {
        return {this->y(), this->z(), this->w()};
    }

    [[nodiscard]] constexpr inline vec3 ywx() const {
        return {this->y(), this->w(), this->x()};
    }

    [[nodiscard]] constexpr inline vec3 ywy() const {
        return {this->y(), this->w(), this->y()};
    }

    [[nodiscard]] constexpr inline vec3 ywz() const {
        return {this->y(), this->w(), this->z()};
    }

    [[nodiscard]] constexpr inline vec3 yww() const {
        return {this->y(), this->w(), this->w()};
    }

    [[nodiscard]] constexpr inline vec3 zxx() const {
        return {this->z(), this->x(), this->x()};
    }

    [[nodiscard]] constexpr inline vec3 zxy() const {
        return {this->z(), this->x(), this->y()};
    }

    [[nodiscard]] constexpr inline vec3 zxz() const {
        return {this->z(), this->x(), this->z()};
    }

    [[nodiscard]] constexpr inline vec3 zxw() const {
        return {this->z(), this->x(), this->w()};
    }

    [[nodiscard]] constexpr inline vec3 zyx() const {
        return {this->z(), this->y(), this->x()};
    }

    [[nodiscard]] constexpr inline vec3 zyy() const {
        return {this->z(), this->y(), this->y()};
    }

    [[nodiscard]] constexpr inline vec3 zyz() const {
        return {this->z(), this->y(), this->z()};
    }

    [[nodiscard]] constexpr inline vec3 zyw() const {
        return {this->z(), this->y(), this->w()};
    }

    [[nodiscard]] constexpr inline vec3 zzx() const {
        return {this->z(), this->z(), this->x()};
    }

    [[nodiscard]] constexpr inline vec3 zzy() const {
        return {this->z(), this->z(), this->y()};
    }

    [[nodiscard]] constexpr inline vec3 zzz() const {
        return {this->z(), this->z(), this->z()};
    }

    [[nodiscard]] constexpr inline vec3 zzw() const {
        return {this->z(), this->z(), this->w()};
    }

    [[nodiscard]] constexpr inline vec3 zwx() const {
        return {this->z(), this->w(), this->x()};
    }

    [[nodiscard]] constexpr inline vec3 zwy() const {
        return {this->z(), this->w(), this->y()};
    }

    [[nodiscard]] constexpr inline vec3 zwz() const {
        return {this->z(), this->w(), this->z()};
    }

    [[nodiscard]] constexpr inline vec3 zww() const {
        return {this->z(), this->w(), this->w()};
    }

    [[nodiscard]] constexpr inline vec3 wxx() const {
        return {this->w(), this->x(), this->x()};
    }

    [[nodiscard]] constexpr inline vec3 wxy() const {
        return {this->w(), this->x(), this->y()};
    }

    [[nodiscard]] constexpr inline vec3 wxz() const {
        return {this->w(), this->x(), this->z()};
    }

    [[nodiscard]] constexpr inline vec3 wxw() const {
        return {this->w(), this->x(), this->w()};
    }

    [[nodiscard]] constexpr inline vec3 wyx() const {
        return {this->w(), this->y(), this->x()};
    }

    [[nodiscard]] constexpr inline vec3 wyy() const {
        return {this->w(), this->y(), this->y()};
    }

    [[nodiscard]] constexpr inline vec3 wyz() const {
        return {this->w(), this->y(), this->z()};
    }

    [[nodiscard]] constexpr inline vec3 wyw() const {
        return {this->w(), this->y(), this->w()};
    }

    [[nodiscard]] constexpr inline vec3 wzx() const {
        return {this->w(), this->z(), this->x()};
    }

    [[nodiscard]] constexpr inline vec3 wzy() const {
        return {this->w(), this->z(), this->y()};
    }

    [[nodiscard]] constexpr inline vec3 wzz() const {
        return {this->w(), this->z(), this->z()};
    }

    [[nodiscard]] constexpr inline vec3 wzw() const {
        return {this->w(), this->z(), this->w()};
    }

    [[nodiscard]] constexpr inline vec3 wwx() const {
        return {this->w(), this->w(), this->x()};
    }

    [[nodiscard]] constexpr inline vec3 wwy() const {
        return {this->w(), this->w(), this->y()};
    }

    [[nodiscard]] constexpr inline vec3 wwz() const {
        return {this->w(), this->w(), this->z()};
    }

    [[nodiscard]] constexpr inline vec3 www() const {
        return {this->w(), this->w(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 xxxx() const {
        return {this->x(), this->x(), this->x(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 xxxy() const {
        return {this->x(), this->x(), this->x(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 xxxz() const {
        return {this->x(), this->x(), this->x(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 xxxw() const {
        return {this->x(), this->x(), this->x(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 xxyx() const {
        return {this->x(), this->x(), this->y(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 xxyy() const {
        return {this->x(), this->x(), this->y(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 xxyz() const {
        return {this->x(), this->x(), this->y(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 xxyw() const {
        return {this->x(), this->x(), this->y(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 xxzx() const {
        return {this->x(), this->x(), this->z(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 xxzy() const {
        return {this->x(), this->x(), this->z(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 xxzz() const {
        return {this->x(), this->x(), this->z(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 xxzw() const {
        return {this->x(), this->x(), this->z(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 xxwx() const {
        return {this->x(), this->x(), this->w(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 xxwy() const {
        return {this->x(), this->x(), this->w(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 xxwz() const {
        return {this->x(), this->x(), this->w(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 xxww() const {
        return {this->x(), this->x(), this->w(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 xyxx() const {
        return {this->x(), this->y(), this->x(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 xyxy() const {
        return {this->x(), this->y(), this->x(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 xyxz() const {
        return {this->x(), this->y(), this->x(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 xyxw() const {
        return {this->x(), this->y(), this->x(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 xyyx() const {
        return {this->x(), this->y(), this->y(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 xyyy() const {
        return {this->x(), this->y(), this->y(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 xyyz() const {
        return {this->x(), this->y(), this->y(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 xyyw() const {
        return {this->x(), this->y(), this->y(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 xyzx() const {
        return {this->x(), this->y(), this->z(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 xyzy() const {
        return {this->x(), this->y(), this->z(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 xyzz() const {
        return {this->x(), this->y(), this->z(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 xyzw() const {
        return {this->x(), this->y(), this->z(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 xywx() const {
        return {this->x(), this->y(), this->w(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 xywy() const {
        return {this->x(), this->y(), this->w(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 xywz() const {
        return {this->x(), this->y(), this->w(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 xyww() const {
        return {this->x(), this->y(), this->w(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 xzxx() const {
        return {this->x(), this->z(), this->x(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 xzxy() const {
        return {this->x(), this->z(), this->x(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 xzxz() const {
        return {this->x(), this->z(), this->x(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 xzxw() const {
        return {this->x(), this->z(), this->x(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 xzyx() const {
        return {this->x(), this->z(), this->y(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 xzyy() const {
        return {this->x(), this->z(), this->y(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 xzyz() const {
        return {this->x(), this->z(), this->y(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 xzyw() const {
        return {this->x(), this->z(), this->y(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 xzzx() const {
        return {this->x(), this->z(), this->z(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 xzzy() const {
        return {this->x(), this->z(), this->z(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 xzzz() const {
        return {this->x(), this->z(), this->z(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 xzzw() const {
        return {this->x(), this->z(), this->z(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 xzwx() const {
        return {this->x(), this->z(), this->w(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 xzwy() const {
        return {this->x(), this->z(), this->w(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 xzwz() const {
        return {this->x(), this->z(), this->w(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 xzww() const {
        return {this->x(), this->z(), this->w(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 xwxx() const {
        return {this->x(), this->w(), this->x(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 xwxy() const {
        return {this->x(), this->w(), this->x(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 xwxz() const {
        return {this->x(), this->w(), this->x(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 xwxw() const {
        return {this->x(), this->w(), this->x(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 xwyx() const {
        return {this->x(), this->w(), this->y(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 xwyy() const {
        return {this->x(), this->w(), this->y(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 xwyz() const {
        return {this->x(), this->w(), this->y(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 xwyw() const {
        return {this->x(), this->w(), this->y(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 xwzx() const {
        return {this->x(), this->w(), this->z(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 xwzy() const {
        return {this->x(), this->w(), this->z(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 xwzz() const {
        return {this->x(), this->w(), this->z(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 xwzw() const {
        return {this->x(), this->w(), this->z(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 xwwx() const {
        return {this->x(), this->w(), this->w(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 xwwy() const {
        return {this->x(), this->w(), this->w(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 xwwz() const {
        return {this->x(), this->w(), this->w(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 xwww() const {
        return {this->x(), this->w(), this->w(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 yxxx() const {
        return {this->y(), this->x(), this->x(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 yxxy() const {
        return {this->y(), this->x(), this->x(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 yxxz() const {
        return {this->y(), this->x(), this->x(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 yxxw() const {
        return {this->y(), this->x(), this->x(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 yxyx() const {
        return {this->y(), this->x(), this->y(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 yxyy() const {
        return {this->y(), this->x(), this->y(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 yxyz() const {
        return {this->y(), this->x(), this->y(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 yxyw() const {
        return {this->y(), this->x(), this->y(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 yxzx() const {
        return {this->y(), this->x(), this->z(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 yxzy() const {
        return {this->y(), this->x(), this->z(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 yxzz() const {
        return {this->y(), this->x(), this->z(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 yxzw() const {
        return {this->y(), this->x(), this->z(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 yxwx() const {
        return {this->y(), this->x(), this->w(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 yxwy() const {
        return {this->y(), this->x(), this->w(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 yxwz() const {
        return {this->y(), this->x(), this->w(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 yxww() const {
        return {this->y(), this->x(), this->w(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 yyxx() const {
        return {this->y(), this->y(), this->x(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 yyxy() const {
        return {this->y(), this->y(), this->x(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 yyxz() const {
        return {this->y(), this->y(), this->x(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 yyxw() const {
        return {this->y(), this->y(), this->x(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 yyyx() const {
        return {this->y(), this->y(), this->y(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 yyyy() const {
        return {this->y(), this->y(), this->y(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 yyyz() const {
        return {this->y(), this->y(), this->y(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 yyyw() const {
        return {this->y(), this->y(), this->y(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 yyzx() const {
        return {this->y(), this->y(), this->z(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 yyzy() const {
        return {this->y(), this->y(), this->z(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 yyzz() const {
        return {this->y(), this->y(), this->z(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 yyzw() const {
        return {this->y(), this->y(), this->z(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 yywx() const {
        return {this->y(), this->y(), this->w(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 yywy() const {
        return {this->y(), this->y(), this->w(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 yywz() const {
        return {this->y(), this->y(), this->w(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 yyww() const {
        return {this->y(), this->y(), this->w(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 yzxx() const {
        return {this->y(), this->z(), this->x(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 yzxy() const {
        return {this->y(), this->z(), this->x(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 yzxz() const {
        return {this->y(), this->z(), this->x(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 yzxw() const {
        return {this->y(), this->z(), this->x(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 yzyx() const {
        return {this->y(), this->z(), this->y(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 yzyy() const {
        return {this->y(), this->z(), this->y(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 yzyz() const {
        return {this->y(), this->z(), this->y(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 yzyw() const {
        return {this->y(), this->z(), this->y(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 yzzx() const {
        return {this->y(), this->z(), this->z(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 yzzy() const {
        return {this->y(), this->z(), this->z(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 yzzz() const {
        return {this->y(), this->z(), this->z(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 yzzw() const {
        return {this->y(), this->z(), this->z(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 yzwx() const {
        return {this->y(), this->z(), this->w(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 yzwy() const {
        return {this->y(), this->z(), this->w(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 yzwz() const {
        return {this->y(), this->z(), this->w(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 yzww() const {
        return {this->y(), this->z(), this->w(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 ywxx() const {
        return {this->y(), this->w(), this->x(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 ywxy() const {
        return {this->y(), this->w(), this->x(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 ywxz() const {
        return {this->y(), this->w(), this->x(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 ywxw() const {
        return {this->y(), this->w(), this->x(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 ywyx() const {
        return {this->y(), this->w(), this->y(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 ywyy() const {
        return {this->y(), this->w(), this->y(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 ywyz() const {
        return {this->y(), this->w(), this->y(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 ywyw() const {
        return {this->y(), this->w(), this->y(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 ywzx() const {
        return {this->y(), this->w(), this->z(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 ywzy() const {
        return {this->y(), this->w(), this->z(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 ywzz() const {
        return {this->y(), this->w(), this->z(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 ywzw() const {
        return {this->y(), this->w(), this->z(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 ywwx() const {
        return {this->y(), this->w(), this->w(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 ywwy() const {
        return {this->y(), this->w(), this->w(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 ywwz() const {
        return {this->y(), this->w(), this->w(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 ywww() const {
        return {this->y(), this->w(), this->w(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 zxxx() const {
        return {this->z(), this->x(), this->x(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 zxxy() const {
        return {this->z(), this->x(), this->x(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 zxxz() const {
        return {this->z(), this->x(), this->x(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 zxxw() const {
        return {this->z(), this->x(), this->x(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 zxyx() const {
        return {this->z(), this->x(), this->y(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 zxyy() const {
        return {this->z(), this->x(), this->y(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 zxyz() const {
        return {this->z(), this->x(), this->y(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 zxyw() const {
        return {this->z(), this->x(), this->y(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 zxzx() const {
        return {this->z(), this->x(), this->z(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 zxzy() const {
        return {this->z(), this->x(), this->z(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 zxzz() const {
        return {this->z(), this->x(), this->z(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 zxzw() const {
        return {this->z(), this->x(), this->z(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 zxwx() const {
        return {this->z(), this->x(), this->w(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 zxwy() const {
        return {this->z(), this->x(), this->w(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 zxwz() const {
        return {this->z(), this->x(), this->w(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 zxww() const {
        return {this->z(), this->x(), this->w(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 zyxx() const {
        return {this->z(), this->y(), this->x(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 zyxy() const {
        return {this->z(), this->y(), this->x(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 zyxz() const {
        return {this->z(), this->y(), this->x(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 zyxw() const {
        return {this->z(), this->y(), this->x(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 zyyx() const {
        return {this->z(), this->y(), this->y(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 zyyy() const {
        return {this->z(), this->y(), this->y(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 zyyz() const {
        return {this->z(), this->y(), this->y(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 zyyw() const {
        return {this->z(), this->y(), this->y(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 zyzx() const {
        return {this->z(), this->y(), this->z(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 zyzy() const {
        return {this->z(), this->y(), this->z(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 zyzz() const {
        return {this->z(), this->y(), this->z(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 zyzw() const {
        return {this->z(), this->y(), this->z(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 zywx() const {
        return {this->z(), this->y(), this->w(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 zywy() const {
        return {this->z(), this->y(), this->w(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 zywz() const {
        return {this->z(), this->y(), this->w(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 zyww() const {
        return {this->z(), this->y(), this->w(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 zzxx() const {
        return {this->z(), this->z(), this->x(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 zzxy() const {
        return {this->z(), this->z(), this->x(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 zzxz() const {
        return {this->z(), this->z(), this->x(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 zzxw() const {
        return {this->z(), this->z(), this->x(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 zzyx() const {
        return {this->z(), this->z(), this->y(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 zzyy() const {
        return {this->z(), this->z(), this->y(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 zzyz() const {
        return {this->z(), this->z(), this->y(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 zzyw() const {
        return {this->z(), this->z(), this->y(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 zzzx() const {
        return {this->z(), this->z(), this->z(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 zzzy() const {
        return {this->z(), this->z(), this->z(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 zzzz() const {
        return {this->z(), this->z(), this->z(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 zzzw() const {
        return {this->z(), this->z(), this->z(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 zzwx() const {
        return {this->z(), this->z(), this->w(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 zzwy() const {
        return {this->z(), this->z(), this->w(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 zzwz() const {
        return {this->z(), this->z(), this->w(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 zzww() const {
        return {this->z(), this->z(), this->w(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 zwxx() const {
        return {this->z(), this->w(), this->x(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 zwxy() const {
        return {this->z(), this->w(), this->x(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 zwxz() const {
        return {this->z(), this->w(), this->x(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 zwxw() const {
        return {this->z(), this->w(), this->x(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 zwyx() const {
        return {this->z(), this->w(), this->y(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 zwyy() const {
        return {this->z(), this->w(), this->y(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 zwyz() const {
        return {this->z(), this->w(), this->y(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 zwyw() const {
        return {this->z(), this->w(), this->y(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 zwzx() const {
        return {this->z(), this->w(), this->z(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 zwzy() const {
        return {this->z(), this->w(), this->z(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 zwzz() const {
        return {this->z(), this->w(), this->z(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 zwzw() const {
        return {this->z(), this->w(), this->z(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 zwwx() const {
        return {this->z(), this->w(), this->w(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 zwwy() const {
        return {this->z(), this->w(), this->w(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 zwwz() const {
        return {this->z(), this->w(), this->w(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 zwww() const {
        return {this->z(), this->w(), this->w(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 wxxx() const {
        return {this->w(), this->x(), this->x(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 wxxy() const {
        return {this->w(), this->x(), this->x(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 wxxz() const {
        return {this->w(), this->x(), this->x(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 wxxw() const {
        return {this->w(), this->x(), this->x(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 wxyx() const {
        return {this->w(), this->x(), this->y(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 wxyy() const {
        return {this->w(), this->x(), this->y(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 wxyz() const {
        return {this->w(), this->x(), this->y(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 wxyw() const {
        return {this->w(), this->x(), this->y(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 wxzx() const {
        return {this->w(), this->x(), this->z(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 wxzy() const {
        return {this->w(), this->x(), this->z(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 wxzz() const {
        return {this->w(), this->x(), this->z(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 wxzw() const {
        return {this->w(), this->x(), this->z(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 wxwx() const {
        return {this->w(), this->x(), this->w(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 wxwy() const {
        return {this->w(), this->x(), this->w(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 wxwz() const {
        return {this->w(), this->x(), this->w(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 wxww() const {
        return {this->w(), this->x(), this->w(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 wyxx() const {
        return {this->w(), this->y(), this->x(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 wyxy() const {
        return {this->w(), this->y(), this->x(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 wyxz() const {
        return {this->w(), this->y(), this->x(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 wyxw() const {
        return {this->w(), this->y(), this->x(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 wyyx() const {
        return {this->w(), this->y(), this->y(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 wyyy() const {
        return {this->w(), this->y(), this->y(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 wyyz() const {
        return {this->w(), this->y(), this->y(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 wyyw() const {
        return {this->w(), this->y(), this->y(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 wyzx() const {
        return {this->w(), this->y(), this->z(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 wyzy() const {
        return {this->w(), this->y(), this->z(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 wyzz() const {
        return {this->w(), this->y(), this->z(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 wyzw() const {
        return {this->w(), this->y(), this->z(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 wywx() const {
        return {this->w(), this->y(), this->w(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 wywy() const {
        return {this->w(), this->y(), this->w(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 wywz() const {
        return {this->w(), this->y(), this->w(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 wyww() const {
        return {this->w(), this->y(), this->w(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 wzxx() const {
        return {this->w(), this->z(), this->x(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 wzxy() const {
        return {this->w(), this->z(), this->x(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 wzxz() const {
        return {this->w(), this->z(), this->x(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 wzxw() const {
        return {this->w(), this->z(), this->x(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 wzyx() const {
        return {this->w(), this->z(), this->y(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 wzyy() const {
        return {this->w(), this->z(), this->y(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 wzyz() const {
        return {this->w(), this->z(), this->y(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 wzyw() const {
        return {this->w(), this->z(), this->y(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 wzzx() const {
        return {this->w(), this->z(), this->z(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 wzzy() const {
        return {this->w(), this->z(), this->z(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 wzzz() const {
        return {this->w(), this->z(), this->z(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 wzzw() const {
        return {this->w(), this->z(), this->z(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 wzwx() const {
        return {this->w(), this->z(), this->w(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 wzwy() const {
        return {this->w(), this->z(), this->w(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 wzwz() const {
        return {this->w(), this->z(), this->w(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 wzww() const {
        return {this->w(), this->z(), this->w(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 wwxx() const {
        return {this->w(), this->w(), this->x(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 wwxy() const {
        return {this->w(), this->w(), this->x(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 wwxz() const {
        return {this->w(), this->w(), this->x(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 wwxw() const {
        return {this->w(), this->w(), this->x(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 wwyx() const {
        return {this->w(), this->w(), this->y(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 wwyy() const {
        return {this->w(), this->w(), this->y(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 wwyz() const {
        return {this->w(), this->w(), this->y(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 wwyw() const {
        return {this->w(), this->w(), this->y(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 wwzx() const {
        return {this->w(), this->w(), this->z(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 wwzy() const {
        return {this->w(), this->w(), this->z(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 wwzz() const {
        return {this->w(), this->w(), this->z(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 wwzw() const {
        return {this->w(), this->w(), this->z(), this->w()};
    }

    [[nodiscard]] constexpr inline vec4 wwwx() const {
        return {this->w(), this->w(), this->w(), this->x()};
    }

    [[nodiscard]] constexpr inline vec4 wwwy() const {
        return {this->w(), this->w(), this->w(), this->y()};
    }

    [[nodiscard]] constexpr inline vec4 wwwz() const {
        return {this->w(), this->w(), this->w(), this->z()};
    }

    [[nodiscard]] constexpr inline vec4 wwww() const {
        return {this->w(), this->w(), this->w(), this->w()};
    }

    [[nodiscard]] constexpr inline float len_l1() const {
        return std::abs(this->x())+std::abs(this->y())+std::abs(this->z())+std::abs(this->w());
    }

    [[nodiscard]] constexpr inline float len2() const {
        return this->x() * this->x()+this->y() * this->y()+this->z() * this->z()+this->w() * this->w();
    }

    [[nodiscard]] constexpr inline float len() const {
        return std::sqrt(this->len2());
    }

    [[nodiscard]] constexpr inline vec4 abs() const {
        return {std::abs(this->x()), std::abs(this->y()), std::abs(this->z()), std::abs(this->w())};
    }

};

[[nodiscard]] constexpr inline bool operator==(const vec4& a, const vec4& b) {
    return (a.x()==b.x()) & (a.y()==b.y()) & (a.z()==b.z()) & (a.w()==b.w());
}

[[nodiscard]] constexpr inline vec4 operator+(const vec4& a, const vec4& b) {
    return {a.x() + b.x(), a.y() + b.y(), a.z() + b.z(), a.w() + b.w()};
}

[[nodiscard]] constexpr inline vec4 operator-(const vec4& a, const vec4& b) {
    return {a.x() - b.x(), a.y() - b.y(), a.z() - b.z(), a.w() - b.w()};
}

[[nodiscard]] constexpr inline vec4 operator*(const vec4& a, const vec4& b) {
    return {a.x() * b.x(), a.y() * b.y(), a.z() * b.z(), a.w() * b.w()};
}

[[nodiscard]] constexpr inline vec4 operator/(const vec4& a, const vec4& b) {
    return {a.x() / b.x(), a.y() / b.y(), a.z() / b.z(), a.w() / b.w()};
}

constexpr inline vec4& operator+=(vec4& a, const vec4& b) {
    a.x() += b.x();
    a.y() += b.y();
    a.z() += b.z();
    a.w() += b.w();
    return a;
}

constexpr inline vec4& operator-=(vec4& a, const vec4& b) {
    a.x() -= b.x();
    a.y() -= b.y();
    a.z() -= b.z();
    a.w() -= b.w();
    return a;
}

constexpr inline vec4& operator*=(vec4& a, const vec4& b) {
    a.x() *= b.x();
    a.y() *= b.y();
    a.z() *= b.z();
    a.w() *= b.w();
    return a;
}

constexpr inline vec4& operator/=(vec4& a, const vec4& b) {
    a.x() /= b.x();
    a.y() /= b.y();
    a.z() /= b.z();
    a.w() /= b.w();
    return a;
}

[[nodiscard]] constexpr inline vec4 operator-(const vec4& vec) {
    return {-vec.x(), -vec.y(), -vec.z(), -vec.w()};
}

[[nodiscard]] constexpr inline vec4 operator+(const vec4& vec, float scl) {
    return {vec.x() + scl, vec.y() + scl, vec.z() + scl, vec.w() + scl};
}

[[nodiscard]] constexpr inline vec4 operator+(float scl, const vec4& vec) {
    return {scl + vec.x() , scl + vec.y() , scl + vec.z() , scl + vec.w() };
}

[[nodiscard]] constexpr inline vec4 operator-(const vec4& vec, float scl) {
    return {vec.x() - scl, vec.y() - scl, vec.z() - scl, vec.w() - scl};
}

[[nodiscard]] constexpr inline vec4 operator-(float scl, const vec4& vec) {
    return {scl - vec.x() , scl - vec.y() , scl - vec.z() , scl - vec.w() };
}

[[nodiscard]] constexpr inline vec4 operator*(const vec4& vec, float scl) {
    return {vec.x() * scl, vec.y() * scl, vec.z() * scl, vec.w() * scl};
}

[[nodiscard]] constexpr inline vec4 operator*(float scl, const vec4& vec) {
    return {scl * vec.x() , scl * vec.y() , scl * vec.z() , scl * vec.w() };
}

[[nodiscard]] constexpr inline vec4 operator/(const vec4& vec, float scl) {
    return {vec.x() / scl, vec.y() / scl, vec.z() / scl, vec.w() / scl};
}

[[nodiscard]] constexpr inline vec4 operator/(float scl, const vec4& vec) {
    return {scl / vec.x() , scl / vec.y() , scl / vec.z() , scl / vec.w() };
}

constexpr inline vec4& operator+=(vec4& vec, float scl) {
    vec.x() += scl;
    vec.y() += scl;
    vec.z() += scl;
    vec.w() += scl;
return vec;
}

constexpr inline vec4& operator-=(vec4& vec, float scl) {
    vec.x() -= scl;
    vec.y() -= scl;
    vec.z() -= scl;
    vec.w() -= scl;
return vec;
}

constexpr inline vec4& operator*=(vec4& vec, float scl) {
    vec.x() *= scl;
    vec.y() *= scl;
    vec.z() *= scl;
    vec.w() *= scl;
return vec;
}

constexpr inline vec4& operator/=(vec4& vec, float scl) {
    vec.x() /= scl;
    vec.y() /= scl;
    vec.z() /= scl;
    vec.w() /= scl;
return vec;
}

inline std::istream& operator>>(std::istream& stream, vec4& vec) {
    return stream >> vec.x() >> vec.y() >> vec.z() >> vec.w();
}

[[nodiscard]] constexpr inline float dot(const vec4 &a, const vec4 &b) {
    return a.x() * b.x() + a.y() * b.y() + a.z() * b.z() + a.w() * b.w();
}
[[nodiscard]] constexpr inline vec4 min(const vec4& a, const vec4& b) {
    return {std::min(a.x(), b.x()), std::min(a.y(), b.y()), std::min(a.z(), b.z()), std::min(a.w(), b.w())};
}

[[nodiscard]] constexpr inline vec4 max(const vec4& a, const vec4& b) {
    return {std::max(a.x(), b.x()), std::max(a.y(), b.y()), std::max(a.z(), b.z()), std::max(a.w(), b.w())};
}

[[nodiscard]] constexpr inline vec4 pow(const vec4& a, const vec4& b) {
    return {std::pow(a.x(), b.x()), std::pow(a.y(), b.y()), std::pow(a.z(), b.z()), std::pow(a.w(), b.w())};
}

[[nodiscard]] constexpr inline vec4 pow(const vec4& a, float scl) {
    return {std::pow(a.x(), scl), std::pow(a.y(), scl), std::pow(a.z(), scl), std::pow(a.w(), scl)};
}


struct color3 {
    std::array<float, 3> val;

    [[nodiscard]] constexpr inline color3(float x = 0) : val({x, x, x}) {}
    [[nodiscard]] constexpr inline color3(float r, float g, float b) : val({r, g, b}) {}
    [[nodiscard]] constexpr inline color3(const color3&) = default;
    inline color3& operator=(const color3&) = default;

    [[nodiscard]] constexpr inline float& r() {
        return this->val[0];
    }

    [[nodiscard]] constexpr inline const float& r() const{
        return this->val[0];
    }

    [[nodiscard]] constexpr inline float& g() {
        return this->val[1];
    }

    [[nodiscard]] constexpr inline const float& g() const{
        return this->val[1];
    }

    [[nodiscard]] constexpr inline float& b() {
        return this->val[2];
    }

    [[nodiscard]] constexpr inline const float& b() const{
        return this->val[2];
    }

    [[nodiscard]] constexpr inline color3 rrr() const {
        return {this->r(), this->r(), this->r()};
    }

    [[nodiscard]] constexpr inline color3 rrg() const {
        return {this->r(), this->r(), this->g()};
    }

    [[nodiscard]] constexpr inline color3 rrb() const {
        return {this->r(), this->r(), this->b()};
    }

    [[nodiscard]] constexpr inline color3 rgr() const {
        return {this->r(), this->g(), this->r()};
    }

    [[nodiscard]] constexpr inline color3 rgg() const {
        return {this->r(), this->g(), this->g()};
    }

    [[nodiscard]] constexpr inline color3 rgb() const {
        return {this->r(), this->g(), this->b()};
    }

    [[nodiscard]] constexpr inline color3 rbr() const {
        return {this->r(), this->b(), this->r()};
    }

    [[nodiscard]] constexpr inline color3 rbg() const {
        return {this->r(), this->b(), this->g()};
    }

    [[nodiscard]] constexpr inline color3 rbb() const {
        return {this->r(), this->b(), this->b()};
    }

    [[nodiscard]] constexpr inline color3 grr() const {
        return {this->g(), this->r(), this->r()};
    }

    [[nodiscard]] constexpr inline color3 grg() const {
        return {this->g(), this->r(), this->g()};
    }

    [[nodiscard]] constexpr inline color3 grb() const {
        return {this->g(), this->r(), this->b()};
    }

    [[nodiscard]] constexpr inline color3 ggr() const {
        return {this->g(), this->g(), this->r()};
    }

    [[nodiscard]] constexpr inline color3 ggg() const {
        return {this->g(), this->g(), this->g()};
    }

    [[nodiscard]] constexpr inline color3 ggb() const {
        return {this->g(), this->g(), this->b()};
    }

    [[nodiscard]] constexpr inline color3 gbr() const {
        return {this->g(), this->b(), this->r()};
    }

    [[nodiscard]] constexpr inline color3 gbg() const {
        return {this->g(), this->b(), this->g()};
    }

    [[nodiscard]] constexpr inline color3 gbb() const {
        return {this->g(), this->b(), this->b()};
    }

    [[nodiscard]] constexpr inline color3 brr() const {
        return {this->b(), this->r(), this->r()};
    }

    [[nodiscard]] constexpr inline color3 brg() const {
        return {this->b(), this->r(), this->g()};
    }

    [[nodiscard]] constexpr inline color3 brb() const {
        return {this->b(), this->r(), this->b()};
    }

    [[nodiscard]] constexpr inline color3 bgr() const {
        return {this->b(), this->g(), this->r()};
    }

    [[nodiscard]] constexpr inline color3 bgg() const {
        return {this->b(), this->g(), this->g()};
    }

    [[nodiscard]] constexpr inline color3 bgb() const {
        return {this->b(), this->g(), this->b()};
    }

    [[nodiscard]] constexpr inline color3 bbr() const {
        return {this->b(), this->b(), this->r()};
    }

    [[nodiscard]] constexpr inline color3 bbg() const {
        return {this->b(), this->b(), this->g()};
    }

    [[nodiscard]] constexpr inline color3 bbb() const {
        return {this->b(), this->b(), this->b()};
    }

    [[nodiscard]] constexpr inline float len_l1() const {
        return std::abs(this->r())+std::abs(this->g())+std::abs(this->b());
    }

    [[nodiscard]] constexpr inline float len2() const {
        return this->r() * this->r()+this->g() * this->g()+this->b() * this->b();
    }

    [[nodiscard]] constexpr inline float len() const {
        return std::sqrt(this->len2());
    }

    [[nodiscard]] constexpr inline color3 abs() const {
        return {std::abs(this->r()), std::abs(this->g()), std::abs(this->b())};
    }

};

[[nodiscard]] constexpr inline bool operator==(const color3& a, const color3& b) {
    return (a.r()==b.r()) & (a.g()==b.g()) & (a.b()==b.b());
}

[[nodiscard]] constexpr inline color3 operator+(const color3& a, const color3& b) {
    return {a.r() + b.r(), a.g() + b.g(), a.b() + b.b()};
}

[[nodiscard]] constexpr inline color3 operator-(const color3& a, const color3& b) {
    return {a.r() - b.r(), a.g() - b.g(), a.b() - b.b()};
}

[[nodiscard]] constexpr inline color3 operator*(const color3& a, const color3& b) {
    return {a.r() * b.r(), a.g() * b.g(), a.b() * b.b()};
}

[[nodiscard]] constexpr inline color3 operator/(const color3& a, const color3& b) {
    return {a.r() / b.r(), a.g() / b.g(), a.b() / b.b()};
}

constexpr inline color3& operator+=(color3& a, const color3& b) {
    a.r() += b.r();
    a.g() += b.g();
    a.b() += b.b();
    return a;
}

constexpr inline color3& operator-=(color3& a, const color3& b) {
    a.r() -= b.r();
    a.g() -= b.g();
    a.b() -= b.b();
    return a;
}

constexpr inline color3& operator*=(color3& a, const color3& b) {
    a.r() *= b.r();
    a.g() *= b.g();
    a.b() *= b.b();
    return a;
}

constexpr inline color3& operator/=(color3& a, const color3& b) {
    a.r() /= b.r();
    a.g() /= b.g();
    a.b() /= b.b();
    return a;
}

[[nodiscard]] constexpr inline color3 operator-(const color3& vec) {
    return {-vec.r(), -vec.g(), -vec.b()};
}

[[nodiscard]] constexpr inline color3 operator+(const color3& vec, float scl) {
    return {vec.r() + scl, vec.g() + scl, vec.b() + scl};
}

[[nodiscard]] constexpr inline color3 operator+(float scl, const color3& vec) {
    return {scl + vec.r() , scl + vec.g() , scl + vec.b() };
}

[[nodiscard]] constexpr inline color3 operator-(const color3& vec, float scl) {
    return {vec.r() - scl, vec.g() - scl, vec.b() - scl};
}

[[nodiscard]] constexpr inline color3 operator-(float scl, const color3& vec) {
    return {scl - vec.r() , scl - vec.g() , scl - vec.b() };
}

[[nodiscard]] constexpr inline color3 operator*(const color3& vec, float scl) {
    return {vec.r() * scl, vec.g() * scl, vec.b() * scl};
}

[[nodiscard]] constexpr inline color3 operator*(float scl, const color3& vec) {
    return {scl * vec.r() , scl * vec.g() , scl * vec.b() };
}

[[nodiscard]] constexpr inline color3 operator/(const color3& vec, float scl) {
    return {vec.r() / scl, vec.g() / scl, vec.b() / scl};
}

[[nodiscard]] constexpr inline color3 operator/(float scl, const color3& vec) {
    return {scl / vec.r() , scl / vec.g() , scl / vec.b() };
}

constexpr inline color3& operator+=(color3& vec, float scl) {
    vec.r() += scl;
    vec.g() += scl;
    vec.b() += scl;
return vec;
}

constexpr inline color3& operator-=(color3& vec, float scl) {
    vec.r() -= scl;
    vec.g() -= scl;
    vec.b() -= scl;
return vec;
}

constexpr inline color3& operator*=(color3& vec, float scl) {
    vec.r() *= scl;
    vec.g() *= scl;
    vec.b() *= scl;
return vec;
}

constexpr inline color3& operator/=(color3& vec, float scl) {
    vec.r() /= scl;
    vec.g() /= scl;
    vec.b() /= scl;
return vec;
}

inline std::istream& operator>>(std::istream& stream, color3& vec) {
    return stream >> vec.r() >> vec.g() >> vec.b();
}

[[nodiscard]] constexpr inline float dot(const color3 &a, const color3 &b) {
    return a.r() * b.r() + a.g() * b.g() + a.b() * b.b();
}
[[nodiscard]] constexpr inline color3 min(const color3& a, const color3& b) {
    return {std::min(a.r(), b.r()), std::min(a.g(), b.g()), std::min(a.b(), b.b())};
}

[[nodiscard]] constexpr inline color3 max(const color3& a, const color3& b) {
    return {std::max(a.r(), b.r()), std::max(a.g(), b.g()), std::max(a.b(), b.b())};
}

[[nodiscard]] constexpr inline color3 pow(const color3& a, const color3& b) {
    return {std::pow(a.r(), b.r()), std::pow(a.g(), b.g()), std::pow(a.b(), b.b())};
}

[[nodiscard]] constexpr inline color3 pow(const color3& a, float scl) {
    return {std::pow(a.r(), scl), std::pow(a.g(), scl), std::pow(a.b(), scl)};
}


struct color4 {
    std::array<float, 4> val;

    [[nodiscard]] constexpr inline color4(float x = 0) : val({x, x, x, x}) {}
    [[nodiscard]] constexpr inline color4(float r, float g, float b, float a) : val({r, g, b, a}) {}
    [[nodiscard]] constexpr inline color4(const color4&) = default;
    inline color4& operator=(const color4&) = default;
    [[nodiscard]] constexpr inline color4(color3 p0, float p1) : color4{p0.val[0], p0.val[1], p0.val[2], p1} {}

    [[nodiscard]] constexpr inline color4(float p0, color3 p1) : color4{p0, p1.val[0], p1.val[1], p1.val[2]} {}


    [[nodiscard]] constexpr inline float& r() {
        return this->val[0];
    }

    [[nodiscard]] constexpr inline const float& r() const{
        return this->val[0];
    }

    [[nodiscard]] constexpr inline float& g() {
        return this->val[1];
    }

    [[nodiscard]] constexpr inline const float& g() const{
        return this->val[1];
    }

    [[nodiscard]] constexpr inline float& b() {
        return this->val[2];
    }

    [[nodiscard]] constexpr inline const float& b() const{
        return this->val[2];
    }

    [[nodiscard]] constexpr inline float& a() {
        return this->val[3];
    }

    [[nodiscard]] constexpr inline const float& a() const{
        return this->val[3];
    }

    [[nodiscard]] constexpr inline color3 rrr() const {
        return {this->r(), this->r(), this->r()};
    }

    [[nodiscard]] constexpr inline color3 rrg() const {
        return {this->r(), this->r(), this->g()};
    }

    [[nodiscard]] constexpr inline color3 rrb() const {
        return {this->r(), this->r(), this->b()};
    }

    [[nodiscard]] constexpr inline color3 rra() const {
        return {this->r(), this->r(), this->a()};
    }

    [[nodiscard]] constexpr inline color3 rgr() const {
        return {this->r(), this->g(), this->r()};
    }

    [[nodiscard]] constexpr inline color3 rgg() const {
        return {this->r(), this->g(), this->g()};
    }

    [[nodiscard]] constexpr inline color3 rgb() const {
        return {this->r(), this->g(), this->b()};
    }

    [[nodiscard]] constexpr inline color3 rga() const {
        return {this->r(), this->g(), this->a()};
    }

    [[nodiscard]] constexpr inline color3 rbr() const {
        return {this->r(), this->b(), this->r()};
    }

    [[nodiscard]] constexpr inline color3 rbg() const {
        return {this->r(), this->b(), this->g()};
    }

    [[nodiscard]] constexpr inline color3 rbb() const {
        return {this->r(), this->b(), this->b()};
    }

    [[nodiscard]] constexpr inline color3 rba() const {
        return {this->r(), this->b(), this->a()};
    }

    [[nodiscard]] constexpr inline color3 rar() const {
        return {this->r(), this->a(), this->r()};
    }

    [[nodiscard]] constexpr inline color3 rag() const {
        return {this->r(), this->a(), this->g()};
    }

    [[nodiscard]] constexpr inline color3 rab() const {
        return {this->r(), this->a(), this->b()};
    }

    [[nodiscard]] constexpr inline color3 raa() const {
        return {this->r(), this->a(), this->a()};
    }

    [[nodiscard]] constexpr inline color3 grr() const {
        return {this->g(), this->r(), this->r()};
    }

    [[nodiscard]] constexpr inline color3 grg() const {
        return {this->g(), this->r(), this->g()};
    }

    [[nodiscard]] constexpr inline color3 grb() const {
        return {this->g(), this->r(), this->b()};
    }

    [[nodiscard]] constexpr inline color3 gra() const {
        return {this->g(), this->r(), this->a()};
    }

    [[nodiscard]] constexpr inline color3 ggr() const {
        return {this->g(), this->g(), this->r()};
    }

    [[nodiscard]] constexpr inline color3 ggg() const {
        return {this->g(), this->g(), this->g()};
    }

    [[nodiscard]] constexpr inline color3 ggb() const {
        return {this->g(), this->g(), this->b()};
    }

    [[nodiscard]] constexpr inline color3 gga() const {
        return {this->g(), this->g(), this->a()};
    }

    [[nodiscard]] constexpr inline color3 gbr() const {
        return {this->g(), this->b(), this->r()};
    }

    [[nodiscard]] constexpr inline color3 gbg() const {
        return {this->g(), this->b(), this->g()};
    }

    [[nodiscard]] constexpr inline color3 gbb() const {
        return {this->g(), this->b(), this->b()};
    }

    [[nodiscard]] constexpr inline color3 gba() const {
        return {this->g(), this->b(), this->a()};
    }

    [[nodiscard]] constexpr inline color3 gar() const {
        return {this->g(), this->a(), this->r()};
    }

    [[nodiscard]] constexpr inline color3 gag() const {
        return {this->g(), this->a(), this->g()};
    }

    [[nodiscard]] constexpr inline color3 gab() const {
        return {this->g(), this->a(), this->b()};
    }

    [[nodiscard]] constexpr inline color3 gaa() const {
        return {this->g(), this->a(), this->a()};
    }

    [[nodiscard]] constexpr inline color3 brr() const {
        return {this->b(), this->r(), this->r()};
    }

    [[nodiscard]] constexpr inline color3 brg() const {
        return {this->b(), this->r(), this->g()};
    }

    [[nodiscard]] constexpr inline color3 brb() const {
        return {this->b(), this->r(), this->b()};
    }

    [[nodiscard]] constexpr inline color3 bra() const {
        return {this->b(), this->r(), this->a()};
    }

    [[nodiscard]] constexpr inline color3 bgr() const {
        return {this->b(), this->g(), this->r()};
    }

    [[nodiscard]] constexpr inline color3 bgg() const {
        return {this->b(), this->g(), this->g()};
    }

    [[nodiscard]] constexpr inline color3 bgb() const {
        return {this->b(), this->g(), this->b()};
    }

    [[nodiscard]] constexpr inline color3 bga() const {
        return {this->b(), this->g(), this->a()};
    }

    [[nodiscard]] constexpr inline color3 bbr() const {
        return {this->b(), this->b(), this->r()};
    }

    [[nodiscard]] constexpr inline color3 bbg() const {
        return {this->b(), this->b(), this->g()};
    }

    [[nodiscard]] constexpr inline color3 bbb() const {
        return {this->b(), this->b(), this->b()};
    }

    [[nodiscard]] constexpr inline color3 bba() const {
        return {this->b(), this->b(), this->a()};
    }

    [[nodiscard]] constexpr inline color3 bar() const {
        return {this->b(), this->a(), this->r()};
    }

    [[nodiscard]] constexpr inline color3 bag() const {
        return {this->b(), this->a(), this->g()};
    }

    [[nodiscard]] constexpr inline color3 bab() const {
        return {this->b(), this->a(), this->b()};
    }

    [[nodiscard]] constexpr inline color3 baa() const {
        return {this->b(), this->a(), this->a()};
    }

    [[nodiscard]] constexpr inline color3 arr() const {
        return {this->a(), this->r(), this->r()};
    }

    [[nodiscard]] constexpr inline color3 arg() const {
        return {this->a(), this->r(), this->g()};
    }

    [[nodiscard]] constexpr inline color3 arb() const {
        return {this->a(), this->r(), this->b()};
    }

    [[nodiscard]] constexpr inline color3 ara() const {
        return {this->a(), this->r(), this->a()};
    }

    [[nodiscard]] constexpr inline color3 agr() const {
        return {this->a(), this->g(), this->r()};
    }

    [[nodiscard]] constexpr inline color3 agg() const {
        return {this->a(), this->g(), this->g()};
    }

    [[nodiscard]] constexpr inline color3 agb() const {
        return {this->a(), this->g(), this->b()};
    }

    [[nodiscard]] constexpr inline color3 aga() const {
        return {this->a(), this->g(), this->a()};
    }

    [[nodiscard]] constexpr inline color3 abr() const {
        return {this->a(), this->b(), this->r()};
    }

    [[nodiscard]] constexpr inline color3 abg() const {
        return {this->a(), this->b(), this->g()};
    }

    [[nodiscard]] constexpr inline color3 abb() const {
        return {this->a(), this->b(), this->b()};
    }

    [[nodiscard]] constexpr inline color3 aba() const {
        return {this->a(), this->b(), this->a()};
    }

    [[nodiscard]] constexpr inline color3 aar() const {
        return {this->a(), this->a(), this->r()};
    }

    [[nodiscard]] constexpr inline color3 aag() const {
        return {this->a(), this->a(), this->g()};
    }

    [[nodiscard]] constexpr inline color3 aab() const {
        return {this->a(), this->a(), this->b()};
    }

    [[nodiscard]] constexpr inline color3 aaa() const {
        return {this->a(), this->a(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 rrrr() const {
        return {this->r(), this->r(), this->r(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 rrrg() const {
        return {this->r(), this->r(), this->r(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 rrrb() const {
        return {this->r(), this->r(), this->r(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 rrra() const {
        return {this->r(), this->r(), this->r(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 rrgr() const {
        return {this->r(), this->r(), this->g(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 rrgg() const {
        return {this->r(), this->r(), this->g(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 rrgb() const {
        return {this->r(), this->r(), this->g(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 rrga() const {
        return {this->r(), this->r(), this->g(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 rrbr() const {
        return {this->r(), this->r(), this->b(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 rrbg() const {
        return {this->r(), this->r(), this->b(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 rrbb() const {
        return {this->r(), this->r(), this->b(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 rrba() const {
        return {this->r(), this->r(), this->b(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 rrar() const {
        return {this->r(), this->r(), this->a(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 rrag() const {
        return {this->r(), this->r(), this->a(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 rrab() const {
        return {this->r(), this->r(), this->a(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 rraa() const {
        return {this->r(), this->r(), this->a(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 rgrr() const {
        return {this->r(), this->g(), this->r(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 rgrg() const {
        return {this->r(), this->g(), this->r(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 rgrb() const {
        return {this->r(), this->g(), this->r(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 rgra() const {
        return {this->r(), this->g(), this->r(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 rggr() const {
        return {this->r(), this->g(), this->g(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 rggg() const {
        return {this->r(), this->g(), this->g(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 rggb() const {
        return {this->r(), this->g(), this->g(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 rgga() const {
        return {this->r(), this->g(), this->g(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 rgbr() const {
        return {this->r(), this->g(), this->b(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 rgbg() const {
        return {this->r(), this->g(), this->b(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 rgbb() const {
        return {this->r(), this->g(), this->b(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 rgba() const {
        return {this->r(), this->g(), this->b(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 rgar() const {
        return {this->r(), this->g(), this->a(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 rgag() const {
        return {this->r(), this->g(), this->a(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 rgab() const {
        return {this->r(), this->g(), this->a(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 rgaa() const {
        return {this->r(), this->g(), this->a(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 rbrr() const {
        return {this->r(), this->b(), this->r(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 rbrg() const {
        return {this->r(), this->b(), this->r(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 rbrb() const {
        return {this->r(), this->b(), this->r(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 rbra() const {
        return {this->r(), this->b(), this->r(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 rbgr() const {
        return {this->r(), this->b(), this->g(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 rbgg() const {
        return {this->r(), this->b(), this->g(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 rbgb() const {
        return {this->r(), this->b(), this->g(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 rbga() const {
        return {this->r(), this->b(), this->g(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 rbbr() const {
        return {this->r(), this->b(), this->b(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 rbbg() const {
        return {this->r(), this->b(), this->b(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 rbbb() const {
        return {this->r(), this->b(), this->b(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 rbba() const {
        return {this->r(), this->b(), this->b(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 rbar() const {
        return {this->r(), this->b(), this->a(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 rbag() const {
        return {this->r(), this->b(), this->a(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 rbab() const {
        return {this->r(), this->b(), this->a(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 rbaa() const {
        return {this->r(), this->b(), this->a(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 rarr() const {
        return {this->r(), this->a(), this->r(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 rarg() const {
        return {this->r(), this->a(), this->r(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 rarb() const {
        return {this->r(), this->a(), this->r(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 rara() const {
        return {this->r(), this->a(), this->r(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 ragr() const {
        return {this->r(), this->a(), this->g(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 ragg() const {
        return {this->r(), this->a(), this->g(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 ragb() const {
        return {this->r(), this->a(), this->g(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 raga() const {
        return {this->r(), this->a(), this->g(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 rabr() const {
        return {this->r(), this->a(), this->b(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 rabg() const {
        return {this->r(), this->a(), this->b(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 rabb() const {
        return {this->r(), this->a(), this->b(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 raba() const {
        return {this->r(), this->a(), this->b(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 raar() const {
        return {this->r(), this->a(), this->a(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 raag() const {
        return {this->r(), this->a(), this->a(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 raab() const {
        return {this->r(), this->a(), this->a(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 raaa() const {
        return {this->r(), this->a(), this->a(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 grrr() const {
        return {this->g(), this->r(), this->r(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 grrg() const {
        return {this->g(), this->r(), this->r(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 grrb() const {
        return {this->g(), this->r(), this->r(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 grra() const {
        return {this->g(), this->r(), this->r(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 grgr() const {
        return {this->g(), this->r(), this->g(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 grgg() const {
        return {this->g(), this->r(), this->g(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 grgb() const {
        return {this->g(), this->r(), this->g(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 grga() const {
        return {this->g(), this->r(), this->g(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 grbr() const {
        return {this->g(), this->r(), this->b(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 grbg() const {
        return {this->g(), this->r(), this->b(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 grbb() const {
        return {this->g(), this->r(), this->b(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 grba() const {
        return {this->g(), this->r(), this->b(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 grar() const {
        return {this->g(), this->r(), this->a(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 grag() const {
        return {this->g(), this->r(), this->a(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 grab() const {
        return {this->g(), this->r(), this->a(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 graa() const {
        return {this->g(), this->r(), this->a(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 ggrr() const {
        return {this->g(), this->g(), this->r(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 ggrg() const {
        return {this->g(), this->g(), this->r(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 ggrb() const {
        return {this->g(), this->g(), this->r(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 ggra() const {
        return {this->g(), this->g(), this->r(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 gggr() const {
        return {this->g(), this->g(), this->g(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 gggg() const {
        return {this->g(), this->g(), this->g(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 gggb() const {
        return {this->g(), this->g(), this->g(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 ggga() const {
        return {this->g(), this->g(), this->g(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 ggbr() const {
        return {this->g(), this->g(), this->b(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 ggbg() const {
        return {this->g(), this->g(), this->b(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 ggbb() const {
        return {this->g(), this->g(), this->b(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 ggba() const {
        return {this->g(), this->g(), this->b(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 ggar() const {
        return {this->g(), this->g(), this->a(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 ggag() const {
        return {this->g(), this->g(), this->a(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 ggab() const {
        return {this->g(), this->g(), this->a(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 ggaa() const {
        return {this->g(), this->g(), this->a(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 gbrr() const {
        return {this->g(), this->b(), this->r(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 gbrg() const {
        return {this->g(), this->b(), this->r(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 gbrb() const {
        return {this->g(), this->b(), this->r(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 gbra() const {
        return {this->g(), this->b(), this->r(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 gbgr() const {
        return {this->g(), this->b(), this->g(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 gbgg() const {
        return {this->g(), this->b(), this->g(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 gbgb() const {
        return {this->g(), this->b(), this->g(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 gbga() const {
        return {this->g(), this->b(), this->g(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 gbbr() const {
        return {this->g(), this->b(), this->b(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 gbbg() const {
        return {this->g(), this->b(), this->b(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 gbbb() const {
        return {this->g(), this->b(), this->b(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 gbba() const {
        return {this->g(), this->b(), this->b(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 gbar() const {
        return {this->g(), this->b(), this->a(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 gbag() const {
        return {this->g(), this->b(), this->a(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 gbab() const {
        return {this->g(), this->b(), this->a(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 gbaa() const {
        return {this->g(), this->b(), this->a(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 garr() const {
        return {this->g(), this->a(), this->r(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 garg() const {
        return {this->g(), this->a(), this->r(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 garb() const {
        return {this->g(), this->a(), this->r(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 gara() const {
        return {this->g(), this->a(), this->r(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 gagr() const {
        return {this->g(), this->a(), this->g(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 gagg() const {
        return {this->g(), this->a(), this->g(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 gagb() const {
        return {this->g(), this->a(), this->g(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 gaga() const {
        return {this->g(), this->a(), this->g(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 gabr() const {
        return {this->g(), this->a(), this->b(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 gabg() const {
        return {this->g(), this->a(), this->b(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 gabb() const {
        return {this->g(), this->a(), this->b(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 gaba() const {
        return {this->g(), this->a(), this->b(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 gaar() const {
        return {this->g(), this->a(), this->a(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 gaag() const {
        return {this->g(), this->a(), this->a(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 gaab() const {
        return {this->g(), this->a(), this->a(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 gaaa() const {
        return {this->g(), this->a(), this->a(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 brrr() const {
        return {this->b(), this->r(), this->r(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 brrg() const {
        return {this->b(), this->r(), this->r(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 brrb() const {
        return {this->b(), this->r(), this->r(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 brra() const {
        return {this->b(), this->r(), this->r(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 brgr() const {
        return {this->b(), this->r(), this->g(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 brgg() const {
        return {this->b(), this->r(), this->g(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 brgb() const {
        return {this->b(), this->r(), this->g(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 brga() const {
        return {this->b(), this->r(), this->g(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 brbr() const {
        return {this->b(), this->r(), this->b(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 brbg() const {
        return {this->b(), this->r(), this->b(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 brbb() const {
        return {this->b(), this->r(), this->b(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 brba() const {
        return {this->b(), this->r(), this->b(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 brar() const {
        return {this->b(), this->r(), this->a(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 brag() const {
        return {this->b(), this->r(), this->a(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 brab() const {
        return {this->b(), this->r(), this->a(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 braa() const {
        return {this->b(), this->r(), this->a(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 bgrr() const {
        return {this->b(), this->g(), this->r(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 bgrg() const {
        return {this->b(), this->g(), this->r(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 bgrb() const {
        return {this->b(), this->g(), this->r(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 bgra() const {
        return {this->b(), this->g(), this->r(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 bggr() const {
        return {this->b(), this->g(), this->g(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 bggg() const {
        return {this->b(), this->g(), this->g(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 bggb() const {
        return {this->b(), this->g(), this->g(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 bgga() const {
        return {this->b(), this->g(), this->g(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 bgbr() const {
        return {this->b(), this->g(), this->b(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 bgbg() const {
        return {this->b(), this->g(), this->b(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 bgbb() const {
        return {this->b(), this->g(), this->b(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 bgba() const {
        return {this->b(), this->g(), this->b(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 bgar() const {
        return {this->b(), this->g(), this->a(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 bgag() const {
        return {this->b(), this->g(), this->a(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 bgab() const {
        return {this->b(), this->g(), this->a(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 bgaa() const {
        return {this->b(), this->g(), this->a(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 bbrr() const {
        return {this->b(), this->b(), this->r(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 bbrg() const {
        return {this->b(), this->b(), this->r(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 bbrb() const {
        return {this->b(), this->b(), this->r(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 bbra() const {
        return {this->b(), this->b(), this->r(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 bbgr() const {
        return {this->b(), this->b(), this->g(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 bbgg() const {
        return {this->b(), this->b(), this->g(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 bbgb() const {
        return {this->b(), this->b(), this->g(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 bbga() const {
        return {this->b(), this->b(), this->g(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 bbbr() const {
        return {this->b(), this->b(), this->b(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 bbbg() const {
        return {this->b(), this->b(), this->b(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 bbbb() const {
        return {this->b(), this->b(), this->b(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 bbba() const {
        return {this->b(), this->b(), this->b(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 bbar() const {
        return {this->b(), this->b(), this->a(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 bbag() const {
        return {this->b(), this->b(), this->a(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 bbab() const {
        return {this->b(), this->b(), this->a(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 bbaa() const {
        return {this->b(), this->b(), this->a(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 barr() const {
        return {this->b(), this->a(), this->r(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 barg() const {
        return {this->b(), this->a(), this->r(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 barb() const {
        return {this->b(), this->a(), this->r(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 bara() const {
        return {this->b(), this->a(), this->r(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 bagr() const {
        return {this->b(), this->a(), this->g(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 bagg() const {
        return {this->b(), this->a(), this->g(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 bagb() const {
        return {this->b(), this->a(), this->g(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 baga() const {
        return {this->b(), this->a(), this->g(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 babr() const {
        return {this->b(), this->a(), this->b(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 babg() const {
        return {this->b(), this->a(), this->b(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 babb() const {
        return {this->b(), this->a(), this->b(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 baba() const {
        return {this->b(), this->a(), this->b(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 baar() const {
        return {this->b(), this->a(), this->a(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 baag() const {
        return {this->b(), this->a(), this->a(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 baab() const {
        return {this->b(), this->a(), this->a(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 baaa() const {
        return {this->b(), this->a(), this->a(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 arrr() const {
        return {this->a(), this->r(), this->r(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 arrg() const {
        return {this->a(), this->r(), this->r(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 arrb() const {
        return {this->a(), this->r(), this->r(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 arra() const {
        return {this->a(), this->r(), this->r(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 argr() const {
        return {this->a(), this->r(), this->g(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 argg() const {
        return {this->a(), this->r(), this->g(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 argb() const {
        return {this->a(), this->r(), this->g(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 arga() const {
        return {this->a(), this->r(), this->g(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 arbr() const {
        return {this->a(), this->r(), this->b(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 arbg() const {
        return {this->a(), this->r(), this->b(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 arbb() const {
        return {this->a(), this->r(), this->b(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 arba() const {
        return {this->a(), this->r(), this->b(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 arar() const {
        return {this->a(), this->r(), this->a(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 arag() const {
        return {this->a(), this->r(), this->a(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 arab() const {
        return {this->a(), this->r(), this->a(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 araa() const {
        return {this->a(), this->r(), this->a(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 agrr() const {
        return {this->a(), this->g(), this->r(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 agrg() const {
        return {this->a(), this->g(), this->r(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 agrb() const {
        return {this->a(), this->g(), this->r(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 agra() const {
        return {this->a(), this->g(), this->r(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 aggr() const {
        return {this->a(), this->g(), this->g(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 aggg() const {
        return {this->a(), this->g(), this->g(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 aggb() const {
        return {this->a(), this->g(), this->g(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 agga() const {
        return {this->a(), this->g(), this->g(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 agbr() const {
        return {this->a(), this->g(), this->b(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 agbg() const {
        return {this->a(), this->g(), this->b(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 agbb() const {
        return {this->a(), this->g(), this->b(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 agba() const {
        return {this->a(), this->g(), this->b(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 agar() const {
        return {this->a(), this->g(), this->a(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 agag() const {
        return {this->a(), this->g(), this->a(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 agab() const {
        return {this->a(), this->g(), this->a(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 agaa() const {
        return {this->a(), this->g(), this->a(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 abrr() const {
        return {this->a(), this->b(), this->r(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 abrg() const {
        return {this->a(), this->b(), this->r(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 abrb() const {
        return {this->a(), this->b(), this->r(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 abra() const {
        return {this->a(), this->b(), this->r(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 abgr() const {
        return {this->a(), this->b(), this->g(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 abgg() const {
        return {this->a(), this->b(), this->g(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 abgb() const {
        return {this->a(), this->b(), this->g(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 abga() const {
        return {this->a(), this->b(), this->g(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 abbr() const {
        return {this->a(), this->b(), this->b(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 abbg() const {
        return {this->a(), this->b(), this->b(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 abbb() const {
        return {this->a(), this->b(), this->b(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 abba() const {
        return {this->a(), this->b(), this->b(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 abar() const {
        return {this->a(), this->b(), this->a(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 abag() const {
        return {this->a(), this->b(), this->a(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 abab() const {
        return {this->a(), this->b(), this->a(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 abaa() const {
        return {this->a(), this->b(), this->a(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 aarr() const {
        return {this->a(), this->a(), this->r(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 aarg() const {
        return {this->a(), this->a(), this->r(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 aarb() const {
        return {this->a(), this->a(), this->r(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 aara() const {
        return {this->a(), this->a(), this->r(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 aagr() const {
        return {this->a(), this->a(), this->g(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 aagg() const {
        return {this->a(), this->a(), this->g(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 aagb() const {
        return {this->a(), this->a(), this->g(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 aaga() const {
        return {this->a(), this->a(), this->g(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 aabr() const {
        return {this->a(), this->a(), this->b(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 aabg() const {
        return {this->a(), this->a(), this->b(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 aabb() const {
        return {this->a(), this->a(), this->b(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 aaba() const {
        return {this->a(), this->a(), this->b(), this->a()};
    }

    [[nodiscard]] constexpr inline color4 aaar() const {
        return {this->a(), this->a(), this->a(), this->r()};
    }

    [[nodiscard]] constexpr inline color4 aaag() const {
        return {this->a(), this->a(), this->a(), this->g()};
    }

    [[nodiscard]] constexpr inline color4 aaab() const {
        return {this->a(), this->a(), this->a(), this->b()};
    }

    [[nodiscard]] constexpr inline color4 aaaa() const {
        return {this->a(), this->a(), this->a(), this->a()};
    }

    [[nodiscard]] constexpr inline float len_l1() const {
        return std::abs(this->r())+std::abs(this->g())+std::abs(this->b())+std::abs(this->a());
    }

    [[nodiscard]] constexpr inline float len2() const {
        return this->r() * this->r()+this->g() * this->g()+this->b() * this->b()+this->a() * this->a();
    }

    [[nodiscard]] constexpr inline float len() const {
        return std::sqrt(this->len2());
    }

    [[nodiscard]] constexpr inline color4 abs() const {
        return {std::abs(this->r()), std::abs(this->g()), std::abs(this->b()), std::abs(this->a())};
    }

};

[[nodiscard]] constexpr inline bool operator==(const color4& a, const color4& b) {
    return (a.r()==b.r()) & (a.g()==b.g()) & (a.b()==b.b()) & (a.a()==b.a());
}

[[nodiscard]] constexpr inline color4 operator+(const color4& a, const color4& b) {
    return {a.r() + b.r(), a.g() + b.g(), a.b() + b.b(), a.a() + b.a()};
}

[[nodiscard]] constexpr inline color4 operator-(const color4& a, const color4& b) {
    return {a.r() - b.r(), a.g() - b.g(), a.b() - b.b(), a.a() - b.a()};
}

[[nodiscard]] constexpr inline color4 operator*(const color4& a, const color4& b) {
    return {a.r() * b.r(), a.g() * b.g(), a.b() * b.b(), a.a() * b.a()};
}

[[nodiscard]] constexpr inline color4 operator/(const color4& a, const color4& b) {
    return {a.r() / b.r(), a.g() / b.g(), a.b() / b.b(), a.a() / b.a()};
}

constexpr inline color4& operator+=(color4& a, const color4& b) {
    a.r() += b.r();
    a.g() += b.g();
    a.b() += b.b();
    a.a() += b.a();
    return a;
}

constexpr inline color4& operator-=(color4& a, const color4& b) {
    a.r() -= b.r();
    a.g() -= b.g();
    a.b() -= b.b();
    a.a() -= b.a();
    return a;
}

constexpr inline color4& operator*=(color4& a, const color4& b) {
    a.r() *= b.r();
    a.g() *= b.g();
    a.b() *= b.b();
    a.a() *= b.a();
    return a;
}

constexpr inline color4& operator/=(color4& a, const color4& b) {
    a.r() /= b.r();
    a.g() /= b.g();
    a.b() /= b.b();
    a.a() /= b.a();
    return a;
}

[[nodiscard]] constexpr inline color4 operator-(const color4& vec) {
    return {-vec.r(), -vec.g(), -vec.b(), -vec.a()};
}

[[nodiscard]] constexpr inline color4 operator+(const color4& vec, float scl) {
    return {vec.r() + scl, vec.g() + scl, vec.b() + scl, vec.a() + scl};
}

[[nodiscard]] constexpr inline color4 operator+(float scl, const color4& vec) {
    return {scl + vec.r() , scl + vec.g() , scl + vec.b() , scl + vec.a() };
}

[[nodiscard]] constexpr inline color4 operator-(const color4& vec, float scl) {
    return {vec.r() - scl, vec.g() - scl, vec.b() - scl, vec.a() - scl};
}

[[nodiscard]] constexpr inline color4 operator-(float scl, const color4& vec) {
    return {scl - vec.r() , scl - vec.g() , scl - vec.b() , scl - vec.a() };
}

[[nodiscard]] constexpr inline color4 operator*(const color4& vec, float scl) {
    return {vec.r() * scl, vec.g() * scl, vec.b() * scl, vec.a() * scl};
}

[[nodiscard]] constexpr inline color4 operator*(float scl, const color4& vec) {
    return {scl * vec.r() , scl * vec.g() , scl * vec.b() , scl * vec.a() };
}

[[nodiscard]] constexpr inline color4 operator/(const color4& vec, float scl) {
    return {vec.r() / scl, vec.g() / scl, vec.b() / scl, vec.a() / scl};
}

[[nodiscard]] constexpr inline color4 operator/(float scl, const color4& vec) {
    return {scl / vec.r() , scl / vec.g() , scl / vec.b() , scl / vec.a() };
}

constexpr inline color4& operator+=(color4& vec, float scl) {
    vec.r() += scl;
    vec.g() += scl;
    vec.b() += scl;
    vec.a() += scl;
return vec;
}

constexpr inline color4& operator-=(color4& vec, float scl) {
    vec.r() -= scl;
    vec.g() -= scl;
    vec.b() -= scl;
    vec.a() -= scl;
return vec;
}

constexpr inline color4& operator*=(color4& vec, float scl) {
    vec.r() *= scl;
    vec.g() *= scl;
    vec.b() *= scl;
    vec.a() *= scl;
return vec;
}

constexpr inline color4& operator/=(color4& vec, float scl) {
    vec.r() /= scl;
    vec.g() /= scl;
    vec.b() /= scl;
    vec.a() /= scl;
return vec;
}

inline std::istream& operator>>(std::istream& stream, color4& vec) {
    return stream >> vec.r() >> vec.g() >> vec.b() >> vec.a();
}

[[nodiscard]] constexpr inline float dot(const color4 &a, const color4 &b) {
    return a.r() * b.r() + a.g() * b.g() + a.b() * b.b() + a.a() * b.a();
}
[[nodiscard]] constexpr inline color4 min(const color4& a, const color4& b) {
    return {std::min(a.r(), b.r()), std::min(a.g(), b.g()), std::min(a.b(), b.b()), std::min(a.a(), b.a())};
}

[[nodiscard]] constexpr inline color4 max(const color4& a, const color4& b) {
    return {std::max(a.r(), b.r()), std::max(a.g(), b.g()), std::max(a.b(), b.b()), std::max(a.a(), b.a())};
}

[[nodiscard]] constexpr inline color4 pow(const color4& a, const color4& b) {
    return {std::pow(a.r(), b.r()), std::pow(a.g(), b.g()), std::pow(a.b(), b.b()), std::pow(a.a(), b.a())};
}

[[nodiscard]] constexpr inline color4 pow(const color4& a, float scl) {
    return {std::pow(a.r(), scl), std::pow(a.g(), scl), std::pow(a.b(), scl), std::pow(a.a(), scl)};
}


